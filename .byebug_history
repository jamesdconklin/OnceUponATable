c
nn
n
game
n
layer_state
n
layer
layer_state
n
layer_state
layer
n
layer
layrt
state
n
state
game
delta
continue
params
continue
canvas_params
c
current_user
n
@current_user
s
n
current_user
c
delta[:id]
obj[:id]
obj
c
nc
game.valid?
game
n
c
game
n
state
c
Game.first
game.update(canvas_state: JSON.dump(state))
game
Game.first.canvas_state
Game.first
state
c
n
c
layer_state
s
layer_state
n
state[layer]n
state[layer]
state
n
layer
n
layer
delta
n
c
canvas_params
canvas_params[:delta]
delta
n
game
n
game
c
canvas_params[:delta]
canvas_params
params
c
nc
n
c
params.require(:delta).permit(:id, :class, :width).merge(params.require(:layer))
params.require(:delta).permit(:id, :class, :width)
params.requite(:delta).permit(:id, :class, :width)
c
nc
n
nn
n
c
params.require(:delta)c
params.require(:delta).require(:id, :class)
params.require(:delta)
params
c
GameSignup.find_by(game_signup_params)
GameSignup.find_by(_)
game_signup_params
params
c
n
@game
n
@game
continue
c
@game
n
@game
current_user
c
n
k
n
k
n
k
c
k == :gm_id
v
k
params
c
game_params
params.require(:game)
params
params.require(:games)
params.require(:game)
game_params
params
search_params
c
n
search_params
n
c
search_params
earch_params
c
n
search_params
params
continue
params
continue
pm.message
pm.methods
pm
